Assignment name  : microshell
Expected files   : *.c *.h
--------------------------------------------------------------------------------------
Allowed functions: 
	malloc, free
	strcmp, strncmp
	write
	chdir
	fork, waitpid, execve
	pipe, close, dup, dup2
	signal, kill
	exit 
--------------------------------------------------------------------------------------

Write a program that will behave like executing a shell command

1) The command line to execute will be the arguments of this program

2) Executable's path will be absolute or relative but your program must not build a path (from the PATH variable for example)

3) You must implement "|" like in bash
	- we will never try a "|" immediately followed or preceded by nothing or "|" or ";"

4) You must implement ";" like in bash

5) Your program must implement the built-in command cd only with a path as argument (no '-' or without parameters)
	5.1-M) if cd has the wrong number of argument your program
			- should print in STDERR
			- "error: cd: bad arguments" followed by a '\n'

	5.2-M) if cd failed your program should
			- print in STDERR 
			- "error: cd: cannot change directory to path_to_change" 
			- followed by a '\n' with path_to_change replaced by the argument to cd

	5.3) a cd command will never be immediately followed or preceded by a "|"

6) You don't need to manage any type of wildcards (*, ~ etc...)

7) You don't need to manage environment variables ($BLA ...)

8-M) If a system call, except execve and chdir, returns an error your program should
	- immediatly print "error: fatal" in STDERR 
	- followed by a '\n' 
	- and the program should exit

9-M) If execve failed you should
	- print "error: cannot execute executable_that_failed" 
	- in STDERR followed by a '\n' 
	- with executable_that_failed replaced with the path of the failed executable 
	- (It should be the first argument of execve)

10) Your program should be able to manage more than hundreds of "|" 
	- even if we limit the number of "open files" to less than 30.

_____________________________________________________________________________________________________________________________
for example this should work:
$>./microshell /bin/ls "|" /usr/bin/grep microshell ";" /bin/echo i love my microshell
microshell
i love my microshell
$>
_____________________________________________________________________________________________________________________________
Hints:
11) Don't forget to pass the environment variable to execve
_____________________________________________________________________________________________________________________________
Hints:
12) Do not leak file descriptors!
_____________________________________________________________________________________________________________________________